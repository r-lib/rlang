% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/env.R
\name{env_is_direct}
\alias{env_is_direct}
\title{Is frame environment called directly?}
\usage{
env_is_direct(env)
}
\arguments{
\item{env}{An environment.}
}
\description{
Detect if \code{env} is an environment that inherits from:
\itemize{
\item The global environment, as would happen when called interactively
\item A package that is currently being tested
}

If either is true, we consider \code{env} to belong to an evaluation
frame that was called \emph{directly}. By contrast, an \emph{indirect} usage
would be via a third party function.

For instance the \href{https://lifecycle.r-lib.org/}{lifecycle} package
uses \code{env_is_direct()} to figure out whether a deprecated function
was called directly or indirectly, and select an appropriate
verbosity level as a function of that.
}
\examples{
fn <- function() {
  env_is_direct(caller_env())
}

# Direct call of `fn()` from the global env
with(global_env(), fn())

# Indirect call of `fn()` from a package
with(ns_env("utils"), fn())
}
