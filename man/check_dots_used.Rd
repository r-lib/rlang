% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/dots-ellipsis.R
\name{check_dots_used}
\alias{check_dots_used}
\title{Check that all dots have been used}
\usage{
check_dots_used(
  env = caller_env(),
  call = caller_env(),
  error = NULL,
  action = deprecated()
)
}
\arguments{
\item{env}{Environment in which to look for \code{...} and to set up handler.}

\item{call}{The execution environment of a currently
running function, e.g. \code{caller_env()}. The function will be
mentioned in error messages as the source of the error. See the
\code{call} argument of \code{\link[=abort]{abort()}} for more information.}

\item{error}{An optional error handler passed to \code{\link[=try_catch]{try_catch()}}. Use
this e.g. to demote an error into a warning.}

\item{action}{\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#deprecated}{\figure{lifecycle-deprecated.svg}{options: alt='[Deprecated]'}}}{\strong{[Deprecated]}}.}
}
\description{
Automatically sets exit handler to run when function terminates, checking
that all elements of \code{...} have been evaluated. If you use \code{\link[=on.exit]{on.exit()}}
elsewhere in your function, make sure to use \code{add = TRUE} so that you
don't override the handler set up by \code{check_dots_used()}.
}
\examples{
f <- function(...) {
  check_dots_used()
  g(...)
}

g <- function(x, y, ...) {
  x + y
}
f(x = 1, y = 2)

try(f(x = 1, y = 2, z = 3))
try(f(x = 1, y = 2, 3, 4, 5))
}
